Assignment 05.

1) List all the books that are written by Author Loni and has price less then 600.

mysql> select * from books where Author_Name='Loni' and cost<600;
+---------+-----------------------+-------------+--------+----------+
| Book_No | Book_Name             | Author_Name | Cost   | Category |
+---------+-----------------------+-------------+--------+----------+
|     102 | Oracle - Complete Ref | Loni        | 550.00 | Database |
|     103 | Mastering SQL         | Loni        | 250.00 | Database |
+---------+-----------------------+-------------+--------+----------+
2 rows in set (0.02 sec)


2) List the Issue details for the books that are not returned yet.

mysql> select * from issue where Return_Date is null;
+--------------+---------+-----------+------------+-------------+
| Lib_Issue_Id | Book_No | Member_Id | Issue_Date | Return_Date |
+--------------+---------+-----------+------------+-------------+
|         7001 |     101 |         1 | 2006-12-10 | NULL        |
|         7002 |     102 |         2 | 2006-12-25 | NULL        |
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+
3 rows in set (0.00 sec)


3) Update all the blank return_date with 31-Dec-06 excluding 7005 and 7006.

mysql> update issue set Return_Date='2006-12-31' where (Lib_Issue_Id not in (7005,7006)) and (Return_Date is null);
Query OK, 2 rows affected (0.05 sec)
Rows matched: 2  Changed: 2  Warnings: 0


4) List all the Issue details that have books issued for more then 30 days.

mysql> select * from issue where datediff(Return_Date,Issue_Date)>30;
Empty set (0.02 sec)


5) List all the books that have price in range of 500 to 750 and has category as Database.

mysql> select * from books where (cost between 500 and 750) and (category='database');
+---------+-----------------------+-------------+--------+----------+
| Book_No | Book_Name             | Author_Name | Cost   | Category |
+---------+-----------------------+-------------+--------+----------+
|     102 | Oracle - Complete Ref | Loni        | 550.00 | Database |
|     104 | PL SQL-Ref            | Scoot Urman | 750.00 | Database |
+---------+-----------------------+-------------+--------+----------+
2 rows in set (0.00 sec)


6) List all the books that belong to any one of the following categories Science, Database, Fiction, Management.

mysql> select * from books where category in ('Science','Database','Fiction','Management');
+---------+-----------------------+-------------+--------+----------+
| Book_No | Book_Name             | Author_Name | Cost   | Category |
+---------+-----------------------+-------------+--------+----------+
|     102 | Oracle - Complete Ref | Loni        | 550.00 | Database |
|     103 | Mastering SQL         | Loni        | 250.00 | Database |
|     104 | PL SQL-Ref            | Scoot Urman | 750.00 | Database |
+---------+-----------------------+-------------+--------+----------+
3 rows in set (0.00 sec)


7) List all the members in the descending order of Penalty due on them.

mysql> select * from member order by Penalty_Amount desc;
+-----------+--------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| Member_Id | Member_Name  | Member_address | Acc_Open_Date | Membership_type | Fees_paid | Max_Books_Allowed | Penalty_Amount |
+-----------+--------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         6 | Neha Gupta   | Chennai        | 2009-03-05    | Lifetime        |     30000 |                 6 |         200.00 |
|         4 | Suresh Singh | Delhi          | 2008-05-12    | Annual          |      1500 |                 3 |         100.00 |
|         1 | Richa Sharma | Pune           | 2005-12-10    | Lifetime        |     25000 |                 5 |          50.00 |
|         7 | Karan Joshi  | Bangalore      | 2008-07-09    | Annual          |      1200 |                 3 |          50.00 |
|         3 | Amit Kumar   | Mumbai         | 2007-01-10    | Half Yearly     |      2000 |                 4 |           0.00 |
|         5 | Priya Mehta  | Pune           | 2006-02-14    | Quarterly       |       500 |                 2 |           0.00 |
|         8 | Test         | Pune           | 2020-01-01    | Annual          |      2000 |               110 |           0.00 |
|         2 | Garima Sen   | Pune           | 2025-08-22    | Annual          |      1000 |                 3 |           NULL |
+-----------+--------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
8 rows in set (0.00 sec)


8) Modify the price of book with id 103 to Rs 300 and category to RDBMS.

mysql> update books set cost=300,category='RDBMS' where Book_No=103;
Query OK, 1 row affected (0.03 sec)
Rows matched: 1  Changed: 1  Warnings: 0


9) List all the books in ascending order of category and descending order of price.

mysql> select * from books order by category,cost desc;
+---------+-----------------------+---------------+--------+----------+
| Book_No | Book_Name             | Author_Name   | Cost   | Category |
+---------+-----------------------+---------------+--------+----------+
|     105 | Java Complete Ref     | Herbert       | 600.00 | System   |
|     101 | Let us C              | Denis Ritchie | 450.00 | System   |
|     104 | PL SQL-Ref            | Scoot Urman   | 750.00 | Database |
|     102 | Oracle - Complete Ref | Loni          | 550.00 | Database |
|     103 | Mastering SQL         | Loni          | 300.00 | RDBMS    |
|     106 | Python Basics         | David         | 400.00 | Others   |
+---------+-----------------------+---------------+--------+----------+
6 rows in set (0.00 sec)


10) List all the books that contain word SQL in the name of the book.

mysql> select * from books where Book_Name like '%SQL%';
+---------+---------------+-------------+--------+----------+
| Book_No | Book_Name     | Author_Name | Cost   | Category |
+---------+---------------+-------------+--------+----------+
|     103 | Mastering SQL | Loni        | 300.00 | RDBMS    |
|     104 | PL SQL-Ref    | Scoot Urman | 750.00 | Database |
+---------+---------------+-------------+--------+----------+
2 rows in set (0.02 sec)


11) List the Lib_Issue_Id, Issue_Date, Return_Date and No of days Book was issued.

mysql> select Lib_Issue_Id,Issue_Date,Return_Date,datediff(ifnull(Return_Date,curdate()),Issue_Date) as Days_Issued from issue;
+--------------+------------+-------------+-------------+
| Lib_Issue_Id | Issue_Date | Return_Date | Days_Issued |
+--------------+------------+-------------+-------------+
|         7001 | 2006-12-10 | 2006-12-31  |          21 |
|         7002 | 2006-12-25 | 2006-12-31  |           6 |
|         7005 | 2006-11-06 | 2006-11-21  |          15 |
|         7006 | 2006-02-18 | NULL        |        7130 |
+--------------+------------+-------------+-------------+
4 rows in set (0.02 sec)


12) Find the details of the member of the Library in the order of their joining the library.

mysql> select * from member order by Acc_Open_Date;
+-----------+--------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| Member_Id | Member_Name  | Member_address | Acc_Open_Date | Membership_type | Fees_paid | Max_Books_Allowed | Penalty_Amount |
+-----------+--------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         1 | Richa Sharma | Pune           | 2005-12-10    | Lifetime        |     25000 |                 5 |          50.00 |
|         5 | Priya Mehta  | Pune           | 2006-02-14    | Quarterly       |       500 |                 2 |           0.00 |
|         3 | Amit Kumar   | Mumbai         | 2007-01-10    | Half Yearly     |      2000 |                 4 |           0.00 |
|         4 | Suresh Singh | Delhi          | 2008-05-12    | Annual          |      1500 |                 3 |         100.00 |
|         7 | Karan Joshi  | Bangalore      | 2008-07-09    | Annual          |      1200 |                 3 |          50.00 |
|         6 | Neha Gupta   | Chennai        | 2009-03-05    | Lifetime        |     30000 |                 6 |         200.00 |
|         8 | Test         | Pune           | 2020-01-01    | Annual          |      2000 |               110 |           0.00 |
|         2 | Garima Sen   | Pune           | 2025-08-22    | Annual          |      1000 |                 3 |           NULL |
+-----------+--------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
8 rows in set (0.00 sec)


13) Display the count of total no of books issued to Member 101.

mysql> select Member_Id,count(*) as Total_Books_Issued from issue where Member_Id=101;
+-----------+--------------------+
| Member_Id | Total_Books_Issued |
+-----------+--------------------+
|      NULL |                  0 |
+-----------+--------------------+
1 row in set (0.01 sec)


14) Display the total penalty due for all the members.

mysql> select sum(Penalty_Amount) as Total_Penalty_Amount from member;
+----------------------+
| Total_Penalty_Amount |
+----------------------+
|               400.00 |
+----------------------+
1 row in set (0.02 sec)


15) Display the total no of members

mysql> select count(*) as Toatl_Members from member;
+---------------+
| Toatl_Members |
+---------------+
|             8 |
+---------------+
1 row in set (0.02 sec)


16) Display the total no of books issued

mysql> select count(*) as Total_Books_Issued from issue;
+--------------------+
| Total_Books_Issued |
+--------------------+
|                  4 |
+--------------------+
1 row in set (0.00 sec)


17) Display the average membership fees paid by all the members.

mysql> select avg(Fees_paid) as Avg_Membership_fee from member;
+--------------------+
| Avg_Membership_fee |
+--------------------+
|          7900.0000 |
+--------------------+
1 row in set (0.02 sec)


18) List the various categories and count of books in each category.

mysql> select category,count(*) as Total_Books from books group by category;
+----------+-------------+
| category | Total_Books |
+----------+-------------+
| System   |           2 |
| Database |           2 |
| RDBMS    |           1 |
| Others   |           1 |
+----------+-------------+
4 rows in set (0.00 sec)


19) List the book_No and the number of times the book is issued in the descending order of count.

mysql> select book_no,count(*) as Times_Issued from issue group by book_no order by Times_Issued desc;
+---------+--------------+
| book_no | Times_Issued |
+---------+--------------+
|     101 |            2 |
|     102 |            1 |
|     104 |            1 |
+---------+--------------+
3 rows in set (0.01 sec)


20) Find the maximum, minimum, total and average penalty amount in the member table.

mysql> select max(Penalty_Amount),min(Penalty_Amount),avg(Penalty_Amount) from member;
+---------------------+---------------------+---------------------+
| max(Penalty_Amount) | min(Penalty_Amount) | avg(Penalty_Amount) |
+---------------------+---------------------+---------------------+
|              200.00 |                0.00 |           57.142857 |
+---------------------+---------------------+---------------------+
1 row in set (0.02 sec)


21) Display the member id and the no of books for each member that has issued more then 2 books.

mysql> select member_id,count(Lib_Issue_Id) from issue group by member_id having count(Lib_Issue_Id) >2;
Empty set (0.01 sec)


22) Display the member id, book no and no of times the same book is issued by the member in the descending order of count.

mysql> select member_id,Book_No,count(*) as Times_Issued from issue group by member_id,Book_No order by Times_Issued desc;
+-----------+---------+--------------+
| member_id | Book_No | Times_Issued |
+-----------+---------+--------------+
|         1 |     101 |            1 |
|         2 |     102 |            1 |
|         2 |     104 |            1 |
|         3 |     101 |            1 |
+-----------+---------+--------------+
4 rows in set (0.00 sec)


23) Display the month and no of books issued each month in the descending order of count.

mysql> select month(Issue_Date) as Month,count(*) from issue group by  month(Issue_Date) order by count(*) desc;
+-------+----------+
| Month | count(*) |
+-------+----------+
|    12 |        2 |
|    11 |        1 |
|     2 |        1 |
+-------+----------+
3 rows in set (0.00 sec)


24) List the book_no of all the books that are not issued to any member so far.

mysql> select Book_No from books where book_No not in(select distinct book_no from issue);
+---------+
| Book_No |
+---------+
|     103 |
|     105 |
|     106 |
+---------+
3 rows in set (0.03 sec)


25) List all the member id that exist in member table and has also at least one book issued by them.

mysql> select distinct Member_Id from member where Member_Id in (select distinct Member_Id from issue);
+-----------+
| Member_Id |
+-----------+
|         1 |
|         2 |
|         3 |
+-----------+
3 rows in set (0.02 sec)


26) List the member ID with highest and lowest no of books issued.

mysql> (select member_id,count(*) as Total_Books from issue group by member_id order by Total_Books desc limit 1) union (select member_id,count(*) as Total_Books from issue group by member_id order by Total_Books limit 1);
+-----------+-------------+
| member_id | Total_Books |
+-----------+-------------+
|         2 |           2 |
|         1 |           1 |
+-----------+-------------+
2 rows in set (0.02 sec)


27) List all the Issue_details for books issued in December and July without using any arithmetic, Logical or comparison operator.

mysql> select * from issue where month(Issue_Date) in (12,7);
+--------------+---------+-----------+------------+-------------+
| Lib_Issue_Id | Book_No | Member_Id | Issue_Date | Return_Date |
+--------------+---------+-----------+------------+-------------+
|         7001 |     101 |         1 | 2006-12-10 | 2006-12-31  |
|         7002 |     102 |         2 | 2006-12-25 | 2006-12-31  |
+--------------+---------+-----------+------------+-------------+
2 rows in set (0.00 sec)


28) List the Book_No, Book_Name and Issue_date for all the books that are issued in month of December and belong to category Database.

mysql> select B.Book_No,Book_Name,Issue_Date from books B inner join issue I on B.Book_No = I.Book_No where Category='Database' and monthname(Issue_Date) ='December';
+---------+-----------------------+------------+
| Book_No | Book_Name             | Issue_Date |
+---------+-----------------------+------------+
|     102 | Oracle - Complete Ref | 2006-12-25 |
+---------+-----------------------+------------+
1 row in set (0.01 sec)


29) List the Member Id, Member Name and max books allowed in the descending order of the max books allowed.

mysql> select Member_Id,Member_Name,Max_Books_Allowed from member order by Max_Books_Allowed desc;
+-----------+--------------+-------------------+
| Member_Id | Member_Name  | Max_Books_Allowed |
+-----------+--------------+-------------------+
|         8 | Test         |               110 |
|         6 | Neha Gupta   |                 6 |
|         1 | Richa Sharma |                 5 |
|         3 | Amit Kumar   |                 4 |
|         2 | Garima Sen   |                 3 |
|         4 | Suresh Singh |                 3 |
|         7 | Karan Joshi  |                 3 |
|         5 | Priya Mehta  |                 2 |
+-----------+--------------+-------------------+
8 rows in set (0.00 sec)


30) List the Book No, Book Name, Issue_date and Return_Date for all the books issued by Richa Sharma.

mysql> select B.Book_No,B.Book_Name,Issue_Date,Return_Date from books B inner join issue I on B.Book_No = I.Book_No inner join member M on I.Member_Id = M.Member_Id where Member_Name='Richa Sharma';
+---------+-----------+------------+-------------+
| Book_No | Book_Name | Issue_Date | Return_Date |
+---------+-----------+------------+-------------+
|     101 | Let us C  | 2006-12-10 | 2006-12-31  |
+---------+-----------+------------+-------------+
1 row in set (0.01 sec)


31) List the details of all the members that have issued books in Database category.

mysql> select distinct M.* from member M inner join issue I on M.Member_Id = I.Member_Id inner join books B on I.Book_No = B.Book_No where category='Database';
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| Member_Id | Member_Name | Member_address | Acc_Open_Date | Membership_type | Fees_paid | Max_Books_Allowed | Penalty_Amount |
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         2 | Garima Sen  | Pune           | 2025-08-22    | Annual          |      1000 |                 3 |         100.00 |
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
1 row in set (0.02 sec)


32) List all the books that have highest price in their own category.

mysql> select b.Book_No,b.Book_Name,b.Category,b.Cost from books b where b.Cost=(select max(b2.cost) from books b2 where b2.category=b.category);
+---------+-------------------+----------+--------+
| Book_No | Book_Name         | Category | Cost   |
+---------+-------------------+----------+--------+
|     103 | Mastering SQL     | RDBMS    | 300.00 |
|     104 | PL SQL-Ref        | Database | 750.00 |
|     105 | Java Complete Ref | System   | 600.00 |
|     106 | Python Basics     | Others   | 400.00 |
+---------+-------------------+----------+--------+
4 rows in set (0.01 sec)


33) List all the Issue_Details where Issue_date is not within the Acc_open_date and Return_date for that member.

mysql> select i.* from issue i inner join member m on i.Member_Id = m.Member_Id where Issue_Date<Acc_Open_Date or (Return_Date is not null and Return_Date<Issue_Date);
+--------------+---------+-----------+------------+-------------+
| Lib_Issue_Id | Book_No | Member_Id | Issue_Date | Return_Date |
+--------------+---------+-----------+------------+-------------+
|         7002 |     102 |         2 | 2006-12-25 | 2006-12-31  |
|         7005 |     104 |         2 | 2006-11-06 | 2006-11-21  |
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+
3 rows in set (0.01 sec)


34) List all the members that have not issued a single book so far.

mysql> select Member_Id,Member_Name from member m where Member_Id not in (select distinct Member_Id from issue);
+-----------+--------------+
| Member_Id | Member_Name  |
+-----------+--------------+
|         4 | Suresh Singh |
|         5 | Priya Mehta  |
|         6 | Neha Gupta   |
|         7 | Karan Joshi  |
|         8 | Test         |
+-----------+--------------+
5 rows in set (0.00 sec)


35) List all the members that have issued the same book as issued by Garima.

mysql> select distinct m.Member_Id,m.Member_Name from member m inner join issue i on m.Member_Id = i.Member_Id where Book_No in (select Book_No from issue i2 inner join member m2 on i2.Member_Id = m2.Member_Id where Member_Name like '%Garima%');
+-----------+-------------+
| Member_Id | Member_Name |
+-----------+-------------+
|         2 | Garima Sen  |
+-----------+-------------+
1 row in set (0.02 sec)


36) List the Book_Name, Price of all the books that are not returned for more then 30 days.

mysql> select Book_Name,cost from books b inner join issue i on b.Book_No = i.Book_No where Return_Date is null and datediff(curdate(),Issue_Date)>30;
+-----------+--------+
| Book_Name | cost   |
+-----------+--------+
| Let us C  | 450.00 |
+-----------+--------+
1 row in set (0.02 sec)


37) List all the authors and book_name that has more then 1 book written by them.

mysql> select Author_Name,group_concat(Book_Name) as Books from books group by Author_Name having count(Author_Name) >1;
+-------------+-------------------------------------+
| Author_Name | Books                               |
+-------------+-------------------------------------+
| Loni        | Oracle - Complete Ref,Mastering SQL |
+-------------+-------------------------------------+
1 row in set (0.00 sec)


38) List the Member ID, Member Name of the people that have issued the highest and the lowest no of books.

mysql> select Member_Id,Member_Name from member where Member_ID = (select Member_ID from issue group by Member_Id order by count(*) desc limit 1)
    -> UNION
    ->  select Member_Id,Member_Name from member where Member_ID = (select Member_ID from issue group by Member_Id order by count(*) limit 1);
+-----------+--------------+
| Member_Id | Member_Name  |
+-----------+--------------+
|         2 | Garima Sen   |
|         1 | Richa Sharma |
+-----------+--------------+
2 rows in set (0.02 sec)


39) List the details of highest 3 priced books.

mysql> select * from books order by cost desc limit 3;
+---------+-----------------------+-------------+--------+----------+
| Book_No | Book_Name             | Author_Name | Cost   | Category |
+---------+-----------------------+-------------+--------+----------+
|     104 | PL SQL-Ref            | Scoot Urman | 750.00 | Database |
|     105 | Java Complete Ref     | Herbert     | 600.00 | System   |
|     102 | Oracle - Complete Ref | Loni        | 550.00 | Database |
+---------+-----------------------+-------------+--------+----------+
3 rows in set (0.00 sec)


40) List the total cost of all the books that are currently issued but not returned.

mysql> select sum(Cost) as 'Total Cost' from books b inner join issue i on b.Book_No = i.Book_No where Return_Date is null;
+------------+
| Total Cost |
+------------+
|     450.00 |
+------------+
1 row in set (0.01 sec)


41) List the details of the book that has been issued maximum no of times.

mysql> select b.* from books b inner join issue i on b.Book_No = i.Book_No group by Book_No order by count(*) desc limit 1;
+---------+-----------+---------------+--------+----------+
| Book_No | Book_Name | Author_Name   | Cost   | Category |
+---------+-----------+---------------+--------+----------+
|     101 | Let us C  | Denis Ritchie | 450.00 | System   |
+---------+-----------+---------------+--------+----------+
1 row in set (0.00 sec)


42) List how many books are issued to lifetime members.

mysql> select count(*) as "Total Books Issued" from issue i inner join member m on i.Member_Id = m.Member_Id where Membership_type='Lifetime';
+--------------------+
| Total Books Issued |
+--------------------+
|                  1 |
+--------------------+
1 row in set (0.00 sec)


43) List all member types and how many members are there in each type.

mysql> select Membership_type,count(*) from member group by Membership_type order by count(*) desc;
+-----------------+----------+
| Membership_type | count(*) |
+-----------------+----------+
| Annual          |        4 |
| Lifetime        |        2 |
| Half Yearly     |        1 |
| Quarterly       |        1 |
+-----------------+----------+
4 rows in set (0.00 sec)


44) List first 5 members who had joined library.

mysql> select * from member order by Acc_Open_Date limit 5;
+-----------+--------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| Member_Id | Member_Name  | Member_address | Acc_Open_Date | Membership_type | Fees_paid | Max_Books_Allowed | Penalty_Amount |
+-----------+--------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         1 | Richa Sharma | Pune           | 2005-12-10    | Lifetime        |     25000 |                 5 |          50.00 |
|         5 | Priya Mehta  | Pune           | 2006-02-14    | Quarterly       |       500 |                 2 |           0.00 |
|         3 | Amit Kumar   | Mumbai         | 2007-01-10    | Half Yearly     |      2000 |                 4 |           0.00 |
|         4 | Suresh Singh | Delhi          | 2008-05-12    | Annual          |      1500 |                 3 |         100.00 |
|         7 | Karan Joshi  | Bangalore      | 2008-07-09    | Annual          |      1200 |                 3 |          50.00 |
+-----------+--------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
5 rows in set (0.00 sec)


45) List the members with their member type, who have issued books during the period 1st December to 31st December.

mysql> select m.Member_Id,Membership_type from member m inner join issue i on m.Member_Id=i.Member_Id where Issue_Date between '2006-12-01' and '2006-12-31';
+-----------+-----------------+
| Member_Id | Membership_type |
+-----------+-----------------+
|         1 | Lifetime        |
|         2 | Annual          |
+-----------+-----------------+
2 rows in set (0.03 sec)


46) List all the members who have not returned books yet.

mysql> select * from issue where Return_Date is null;
+--------------+---------+-----------+------------+-------------+
| Lib_Issue_Id | Book_No | Member_Id | Issue_Date | Return_Date |
+--------------+---------+-----------+------------+-------------+
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+
1 row in set (0.00 sec)


47) List all the members who joined library on the same date Garima joined.

mysql> select * from member where Member_Name not like '%Garima%' && Acc_Open_Date = (select Acc_Open_Date from member where Member_Name like '%Garima%');
Empty set, 1 warning (0.00 sec)


48) List all the members who has issued books from author “Loni” in the month of December

mysql> select i.member_id from issue i inner join books b on i.book_no=b.book_no where author_name="loni" and  month(issue_date)=12;
+-----------+
| member_id |
+-----------+
|         2 |
+-----------+
1 row in set (0.02 sec)


49) List names of the authors whose books are least issued by lifetime members.

mysql> select b.author_name from books b inner join issue i on b.book_no=i.book_no inner join member m on m.member_id=i.member_id where membership_type="lifetime";
+---------------+
| author_name   |
+---------------+
| Denis Ritchie |
+---------------+
1 row in set (0.00 sec)


50) List the names of members who has issued the books whose cost is more than 300 rupees and whose author is “Scott Urman”

mysql> select m.member_name from books b inner join issue i on b.book_no=i.book_no inner join member m on m.member_id=i.member_id where cost>300 and b.author_name="Scott Urman" ;
Empty set (0.02 sec)


51) List all lifetime members who joined library during 1st January 2006 to 31st December 2006 but issued only one book.

mysql> select distinct m.member_name,count(*) from member m inner join issue i on m.member_id = i.member_id where membership_type="lifetime" and issue_date between "2006-01-01" and "2006-12-31" group by m.member_name having count(*)=1;
+--------------+----------+
| member_name  | count(*) |
+--------------+----------+
| Richa Sharma |        1 |
+--------------+----------+
1 row in set (0.02 sec)


52) Modify the Penalty_Amount for Garima Sen to Rs 100.

mysql> update member set Penalty_Amount=100 where Member_Name='Garima Sen';
Query OK, 1 row affected (0.02 sec)
Rows matched: 1  Changed: 1  Warnings: 0